FROM --platform=linux/amd64 ubuntu:20.04

RUN apt-get update && \
    apt-get upgrade -y

RUN TZ=America/New_York && \
	  ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && \
	  echo $TZ > /etc/timezone

RUN apt-get install -y --no-install-recommends make build-essential \
    libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget \
    ca-certificates curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev \
    libxmlsec1-dev libffi-dev liblzma-dev mecab-ipadic-utf8 git

# Set-up necessary Env vars for PyEnv
ENV PYENV_ROOT /root/.pyenv
ENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH
ENV PYTHON_VERSION 3.7.9

# Install pyenv to manage glocal Python version
RUN set -ex \
    && curl https://pyenv.run | bash \
    && pyenv update \
    && pyenv install $PYTHON_VERSION \
    && pyenv global $PYTHON_VERSION \
    && pyenv rehash

# Install Numpy and Scipy with pip because if we install with apt-get it uses the system version of Python
RUN python3 -m pip install numpy scipy

# Dependencies that we didn't install earlier, mostly meant for the CMake process
RUN apt-get install -y apt-utils cmake-gui doxygen swig openjdk-8-jdk \
    python3-dev wget libtool autoconf gfortran unzip pkg-config gcc patch \
    liblapack-dev libmetis-dev libspdlog-dev libsimbody-dev libadolc2

RUN echo 'export PATH=/opensim/opensim_install/bin:$PATH' >> ~/.bashrc && \
    echo 'export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64' >> ~/.bashrc

RUN mkdir /opensim && \
	  mkdir /opensim/opensim_build && \
	  mkdir /opensim/opensim_dependencies_install && \
	  mkdir /opensim/opensim_dependencies_build

RUN wget https://github.com/opensim-org/opensim-core/archive/refs/tags/4.2.zip && \
    unzip 4.2.zip && \
    mv ./opensim-core-4.2 /opensim/opensim-core && \
    rm 4.2.zip

RUN cd /opensim/opensim_dependencies_build && \
    cmake ../opensim-core/dependencies/ \
    -DCMAKE_INSTALL_PREFIX='/opensim/opensim_dependencies_install' \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo && \
    make -j8

RUN /opensim/opensim_dependencies_build/ipopt-prefix/src/ipopt/ThirdParty/Blas/get.Blas

RUN cd /opensim/opensim_build && \
    cmake ../opensim-core \
    -DOPENSIM_PYTHON_VERSION=3 \
    -DCMAKE_INSTALL_PREFIX='/opensim/opensim_install' \
    -DOPENSIM_DEPENDENCIES_DIR='/opensim/opensim_dependencies_install' \
    -DBUILD_PYTHON_WRAPPING=ON && \
    make -j8

RUN cd /opensim/opensim_build && make -j8 install

SHELL ["/bin/bash", "-c"]

RUN tar -czvf opensim.tar.gz /opensim

RUN cd /opensim/opensim_install/lib/python3.7/site-packages && \
    python3 -m pip install setuptools && \
    python3 ./setup.py install

# Set environment variables for running the tests at the end of this process
ENV PYTHONPATH /opensim/opensim_install/sdk/Python:/opensim/sdk/Python:/opensim/opensim_install/lib/python3.7/site-packages:$PYTHONPATH
ENV PATH /opensim/opensim_install/bin:$PATH
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/opensim/opensim_install/lib:/opensim/opensim_dependencies_install/simbody/lib:/opensim/opensim_dependencies_install/ipopt/lib
ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64

RUN echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opensim/opensim_install/lib:/opensim/opensim_dependencies_install/simbody/lib:/opensim/opensim_dependencies_install/ipopt/lib' >> ~/.bashrc
RUN echo 'export PYTHONPATH=/opensim/opensim_install/sdk/Python:/opensim/sdk/Python:/opensim/opensim_install/lib/python3.7/site-packages:$PYTHONPATH' >> ~/.bashrc

RUN cd /opensim/opensim_build && \
    ctest -j8 --rerun-failed --output-on-failure --python_tests

CMD [ "/bin/bash" ]